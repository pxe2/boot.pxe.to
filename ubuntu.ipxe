<<<<<<< HEAD
<<<<<<< HEAD
#!ipxe

# 01.header.distro.ipxe.erb
=======
=======
>>>>>>> 03dcf6f73f84a91be510289cb2cf94cc05c8db60
item 12.04 ${space} ${os} 12.04 precise
item 12.04 ${space} ${os} 12.04 precise
item 14.04 ${space} ${os} 14.04 trusty
item 14.04 ${space} ${os} 14.04 trusty
item 16.04 ${space} ${os} 16.04 xenial
item 16.04 ${space} ${os} 16.04 xenial
item 17.10 ${space} ${os} 17.10 artful
item 17.10 ${space} ${os} 17.10 artful
item 18.04 ${space} ${os} 18.04 bionic
item 18.04 ${space} ${os} 18.04 bionic
:older_release
set older_release true
set ubuntu_mirror old-releases.ubuntu.com
echo Setting mirror to ${ubuntu_mirror}
clear ubuntu_version
echo -n Please set enter code name of release: ${} && read ubuntu_version
set dir ${ubuntu_base_dir}/dists/${ubuntu_version}/main/installer-${arch_a}/current/images/netboot/
goto ubuntu_boot_type

:mirrorcfg
set mirrorcfg mirror/suite=${ubuntu_version}
set dir ${ubuntu_base_dir}/dists/${ubuntu_version}/main/installer-${arch_a}/current/images/netboot/

:ubuntu_boot_type
menu ${os} [${ubuntu_version}] Installer
item --gap Install types
item install ${space} Install
item rescue ${space} Rescue Mode
item expert ${space} Expert Install
item preseed ${space} Specify preseed url...
choose --default ${type} type || goto ubuntu
echo ${cls}
goto ubuntu_${type}

:ubuntu_rescue
set install_params rescue/enable=true
goto ubuntu_boot

:ubuntu_expert
set install_params priority=low
goto ubuntu_boot

:ubuntu_preseed
echo -n Specify preseed URL for ${os} ${ubuntu_version}: && read preseedurl
set install_params auto=true priority=critical preseed/url=${preseedurl}
goto ubuntu_boot

:ubuntu_install
:ubuntu_boot
set dir ${dir}${menu}-installer/${arch_a}
imgfree
kernel http://${ubuntu_mirror}/${dir}/linux ${install_params} ${netcfg} ${mirrorcfg} ${console} -- quiet ${params} initrd=initrd.gz
initrd http://${ubuntu_mirror}/${dir}/initrd.gz
echo
echo MD5sums:
md5sum linux initrd.gz
iseq ${img_sigs_enabled} true && iseq ${older_release} true && goto skip_sigs ||
iseq ${img_sigs_enabled} true && goto verify_sigs || goto skip_sigs
:verify_sigs
echo
echo Checking signatures...
imgverify linux ${sigs}${dir}/linux.sig || goto error
imgverify initrd.gz ${sigs}${dir}/initrd.gz.sig || goto error
echo Signatures verified!
echo
:skip_sigs
boot

:ubuntu_exit
clear menu
exit 0
:older_release
set older_release true
set ubuntu_mirror old-releases.ubuntu.com
echo Setting mirror to ${ubuntu_mirror}
clear ubuntu_version
echo -n Please set enter code name of release: ${} && read ubuntu_version
set dir ${ubuntu_base_dir}/dists/${ubuntu_version}/main/installer-${arch_a}/current/images/netboot/
goto ubuntu_boot_type

:mirrorcfg
set mirrorcfg mirror/suite=${ubuntu_version}
set dir ${ubuntu_base_dir}/dists/${ubuntu_version}/main/installer-${arch_a}/current/images/netboot/

:ubuntu_boot_type
menu ${os} [${ubuntu_version}] Installer
item --gap Install types
item install ${space} Install
item rescue ${space} Rescue Mode
item expert ${space} Expert Install
item preseed ${space} Specify preseed url...
choose --default ${type} type || goto ubuntu
echo ${cls}
goto ubuntu_${type}

:ubuntu_rescue
set install_params rescue/enable=true
goto ubuntu_boot

:ubuntu_expert
set install_params priority=low
goto ubuntu_boot

:ubuntu_preseed
echo -n Specify preseed URL for ${os} ${ubuntu_version}: && read preseedurl
set install_params auto=true priority=critical preseed/url=${preseedurl}
goto ubuntu_boot

:ubuntu_install
:ubuntu_boot
set dir ${dir}${menu}-installer/${arch_a}
imgfree
kernel http://${ubuntu_mirror}/${dir}/linux ${install_params} ${netcfg} ${mirrorcfg} ${console} -- quiet ${params} initrd=initrd.gz
initrd http://${ubuntu_mirror}/${dir}/initrd.gz
echo
echo MD5sums:
md5sum linux initrd.gz
iseq ${img_sigs_enabled} true && iseq ${older_release} true && goto skip_sigs ||
iseq ${img_sigs_enabled} true && goto verify_sigs || goto skip_sigs
:verify_sigs
echo
echo Checking signatures...
imgverify linux ${sigs}${dir}/linux.sig || goto error
imgverify initrd.gz ${sigs}${dir}/initrd.gz.sig || goto error
echo Signatures verified!
echo
:skip_sigs
boot

:ubuntu_exit
clear menu
exit 0
:older_release
set older_release true
set ubuntu_mirror old-releases.ubuntu.com
echo Setting mirror to ${ubuntu_mirror}
clear ubuntu_version
echo -n Please set enter code name of release: ${} && read ubuntu_version
set dir ${ubuntu_base_dir}/dists/${ubuntu_version}/main/installer-${arch_a}/current/images/netboot/
goto ubuntu_boot_type

:mirrorcfg
set mirrorcfg mirror/suite=${ubuntu_version}
set dir ${ubuntu_base_dir}/dists/${ubuntu_version}/main/installer-${arch_a}/current/images/netboot/

:ubuntu_boot_type
menu ${os} [${ubuntu_version}] Installer
item --gap Install types
item install ${space} Install
item rescue ${space} Rescue Mode
item expert ${space} Expert Install
item preseed ${space} Specify preseed url...
choose --default ${type} type || goto ubuntu
echo ${cls}
goto ubuntu_${type}

:ubuntu_rescue
set install_params rescue/enable=true
goto ubuntu_boot

:ubuntu_expert
set install_params priority=low
goto ubuntu_boot

:ubuntu_preseed
echo -n Specify preseed URL for ${os} ${ubuntu_version}: && read preseedurl
set install_params auto=true priority=critical preseed/url=${preseedurl}
goto ubuntu_boot

:ubuntu_install
:ubuntu_boot
set dir ${dir}${menu}-installer/${arch_a}
imgfree
kernel http://${ubuntu_mirror}/${dir}/linux ${install_params} ${netcfg} ${mirrorcfg} ${console} -- quiet ${params} initrd=initrd.gz
initrd http://${ubuntu_mirror}/${dir}/initrd.gz
echo
echo MD5sums:
md5sum linux initrd.gz
iseq ${img_sigs_enabled} true && iseq ${older_release} true && goto skip_sigs ||
iseq ${img_sigs_enabled} true && goto verify_sigs || goto skip_sigs
:verify_sigs
echo
echo Checking signatures...
imgverify linux ${sigs}${dir}/linux.sig || goto error
imgverify initrd.gz ${sigs}${dir}/initrd.gz.sig || goto error
echo Signatures verified!
echo
:skip_sigs
boot

:ubuntu_exit
clear menu
exit 0
:older_release
set older_release true
set ubuntu_mirror old-releases.ubuntu.com
echo Setting mirror to ${ubuntu_mirror}
clear ubuntu_version
echo -n Please set enter code name of release: ${} && read ubuntu_version
set dir ${ubuntu_base_dir}/dists/${ubuntu_version}/main/installer-${arch_a}/current/images/netboot/
goto ubuntu_boot_type

:mirrorcfg
set mirrorcfg mirror/suite=${ubuntu_version}
set dir ${ubuntu_base_dir}/dists/${ubuntu_version}/main/installer-${arch_a}/current/images/netboot/

:ubuntu_boot_type
menu ${os} [${ubuntu_version}] Installer
item --gap Install types
item install ${space} Install
item rescue ${space} Rescue Mode
item expert ${space} Expert Install
item preseed ${space} Specify preseed url...
choose --default ${type} type || goto ubuntu
echo ${cls}
goto ubuntu_${type}

:ubuntu_rescue
set install_params rescue/enable=true
goto ubuntu_boot

:ubuntu_expert
set install_params priority=low
goto ubuntu_boot

:ubuntu_preseed
echo -n Specify preseed URL for ${os} ${ubuntu_version}: && read preseedurl
set install_params auto=true priority=critical preseed/url=${preseedurl}
goto ubuntu_boot

:ubuntu_install
:ubuntu_boot
set dir ${dir}${menu}-installer/${arch_a}
imgfree
kernel http://${ubuntu_mirror}/${dir}/linux ${install_params} ${netcfg} ${mirrorcfg} ${console} -- quiet ${params} initrd=initrd.gz
initrd http://${ubuntu_mirror}/${dir}/initrd.gz
echo
echo MD5sums:
md5sum linux initrd.gz
iseq ${img_sigs_enabled} true && iseq ${older_release} true && goto skip_sigs ||
iseq ${img_sigs_enabled} true && goto verify_sigs || goto skip_sigs
:verify_sigs
echo
echo Checking signatures...
imgverify linux ${sigs}${dir}/linux.sig || goto error
imgverify initrd.gz ${sigs}${dir}/initrd.gz.sig || goto error
echo Signatures verified!
echo
:skip_sigs
boot

:ubuntu_exit
clear menu
exit 0
:older_release
set older_release true
set ubuntu_mirror old-releases.ubuntu.com
echo Setting mirror to ${ubuntu_mirror}
clear ubuntu_version
echo -n Please set enter code name of release: ${} && read ubuntu_version
set dir ${ubuntu_base_dir}/dists/${ubuntu_version}/main/installer-${arch_a}/current/images/netboot/
goto ubuntu_boot_type

:mirrorcfg
set mirrorcfg mirror/suite=${ubuntu_version}
set dir ${ubuntu_base_dir}/dists/${ubuntu_version}/main/installer-${arch_a}/current/images/netboot/

:ubuntu_boot_type
menu ${os} [${ubuntu_version}] Installer
item --gap Install types
item install ${space} Install
item rescue ${space} Rescue Mode
item expert ${space} Expert Install
item preseed ${space} Specify preseed url...
choose --default ${type} type || goto ubuntu
echo ${cls}
goto ubuntu_${type}

:ubuntu_rescue
set install_params rescue/enable=true
goto ubuntu_boot

:ubuntu_expert
set install_params priority=low
goto ubuntu_boot

:ubuntu_preseed
echo -n Specify preseed URL for ${os} ${ubuntu_version}: && read preseedurl
set install_params auto=true priority=critical preseed/url=${preseedurl}
goto ubuntu_boot

:ubuntu_install
:ubuntu_boot
set dir ${dir}${menu}-installer/${arch_a}
imgfree
kernel http://${ubuntu_mirror}/${dir}/linux ${install_params} ${netcfg} ${mirrorcfg} ${console} -- quiet ${params} initrd=initrd.gz
initrd http://${ubuntu_mirror}/${dir}/initrd.gz
echo
echo MD5sums:
md5sum linux initrd.gz
iseq ${img_sigs_enabled} true && iseq ${older_release} true && goto skip_sigs ||
iseq ${img_sigs_enabled} true && goto verify_sigs || goto skip_sigs
:verify_sigs
echo
echo Checking signatures...
imgverify linux ${sigs}${dir}/linux.sig || goto error
imgverify initrd.gz ${sigs}${dir}/initrd.gz.sig || goto error
echo Signatures verified!
echo
:skip_sigs
boot

:ubuntu_exit
clear menu
exit 0
:older_release
set older_release true
set ubuntu_mirror old-releases.ubuntu.com
echo Setting mirror to ${ubuntu_mirror}
clear ubuntu_version
echo -n Please set enter code name of release: ${} && read ubuntu_version
set dir ${ubuntu_base_dir}/dists/${ubuntu_version}/main/installer-${arch_a}/current/images/netboot/
goto ubuntu_boot_type

:mirrorcfg
set mirrorcfg mirror/suite=${ubuntu_version}
set dir ${ubuntu_base_dir}/dists/${ubuntu_version}/main/installer-${arch_a}/current/images/netboot/

:ubuntu_boot_type
menu ${os} [${ubuntu_version}] Installer
item --gap Install types
item install ${space} Install
item rescue ${space} Rescue Mode
item expert ${space} Expert Install
item preseed ${space} Specify preseed url...
choose --default ${type} type || goto ubuntu
echo ${cls}
goto ubuntu_${type}

:ubuntu_rescue
set install_params rescue/enable=true
goto ubuntu_boot

:ubuntu_expert
set install_params priority=low
goto ubuntu_boot

:ubuntu_preseed
echo -n Specify preseed URL for ${os} ${ubuntu_version}: && read preseedurl
set install_params auto=true priority=critical preseed/url=${preseedurl}
goto ubuntu_boot

:ubuntu_install
:ubuntu_boot
set dir ${dir}${menu}-installer/${arch_a}
imgfree
kernel http://${ubuntu_mirror}/${dir}/linux ${install_params} ${netcfg} ${mirrorcfg} ${console} -- quiet ${params} initrd=initrd.gz
initrd http://${ubuntu_mirror}/${dir}/initrd.gz
echo
echo MD5sums:
md5sum linux initrd.gz
iseq ${img_sigs_enabled} true && iseq ${older_release} true && goto skip_sigs ||
iseq ${img_sigs_enabled} true && goto verify_sigs || goto skip_sigs
:verify_sigs
echo
echo Checking signatures...
imgverify linux ${sigs}${dir}/linux.sig || goto error
imgverify initrd.gz ${sigs}${dir}/initrd.gz.sig || goto error
echo Signatures verified!
echo
:skip_sigs
boot

:ubuntu_exit
clear menu
exit 0
:older_release
set older_release true
set ubuntu_mirror old-releases.ubuntu.com
echo Setting mirror to ${ubuntu_mirror}
clear ubuntu_version
echo -n Please set enter code name of release: ${} && read ubuntu_version
set dir ${ubuntu_base_dir}/dists/${ubuntu_version}/main/installer-${arch_a}/current/images/netboot/
goto ubuntu_boot_type

:mirrorcfg
set mirrorcfg mirror/suite=${ubuntu_version}
set dir ${ubuntu_base_dir}/dists/${ubuntu_version}/main/installer-${arch_a}/current/images/netboot/

:ubuntu_boot_type
menu ${os} [${ubuntu_version}] Installer
item --gap Install types
item install ${space} Install
item rescue ${space} Rescue Mode
item expert ${space} Expert Install
item preseed ${space} Specify preseed url...
choose --default ${type} type || goto ubuntu
echo ${cls}
goto ubuntu_${type}

:ubuntu_rescue
set install_params rescue/enable=true
goto ubuntu_boot

:ubuntu_expert
set install_params priority=low
goto ubuntu_boot

:ubuntu_preseed
echo -n Specify preseed URL for ${os} ${ubuntu_version}: && read preseedurl
set install_params auto=true priority=critical preseed/url=${preseedurl}
goto ubuntu_boot

:ubuntu_install
:ubuntu_boot
set dir ${dir}${menu}-installer/${arch_a}
imgfree
kernel http://${ubuntu_mirror}/${dir}/linux ${install_params} ${netcfg} ${mirrorcfg} ${console} -- quiet ${params} initrd=initrd.gz
initrd http://${ubuntu_mirror}/${dir}/initrd.gz
echo
echo MD5sums:
md5sum linux initrd.gz
iseq ${img_sigs_enabled} true && iseq ${older_release} true && goto skip_sigs ||
iseq ${img_sigs_enabled} true && goto verify_sigs || goto skip_sigs
:verify_sigs
echo
echo Checking signatures...
imgverify linux ${sigs}${dir}/linux.sig || goto error
imgverify initrd.gz ${sigs}${dir}/initrd.gz.sig || goto error
echo Signatures verified!
echo
:skip_sigs
boot

:ubuntu_exit
clear menu
exit 0
:older_release
set older_release true
set ubuntu_mirror old-releases.ubuntu.com
echo Setting mirror to ${ubuntu_mirror}
clear ubuntu_version
echo -n Please set enter code name of release: ${} && read ubuntu_version
set dir ${ubuntu_base_dir}/dists/${ubuntu_version}/main/installer-${arch_a}/current/images/netboot/
goto ubuntu_boot_type

:mirrorcfg
set mirrorcfg mirror/suite=${ubuntu_version}
set dir ${ubuntu_base_dir}/dists/${ubuntu_version}/main/installer-${arch_a}/current/images/netboot/

:ubuntu_boot_type
menu ${os} [${ubuntu_version}] Installer
item --gap Install types
item install ${space} Install
item rescue ${space} Rescue Mode
item expert ${space} Expert Install
item preseed ${space} Specify preseed url...
choose --default ${type} type || goto ubuntu
echo ${cls}
goto ubuntu_${type}

:ubuntu_rescue
set install_params rescue/enable=true
goto ubuntu_boot

:ubuntu_expert
set install_params priority=low
goto ubuntu_boot

:ubuntu_preseed
echo -n Specify preseed URL for ${os} ${ubuntu_version}: && read preseedurl
set install_params auto=true priority=critical preseed/url=${preseedurl}
goto ubuntu_boot

:ubuntu_install
:ubuntu_boot
set dir ${dir}${menu}-installer/${arch_a}
imgfree
kernel http://${ubuntu_mirror}/${dir}/linux ${install_params} ${netcfg} ${mirrorcfg} ${console} -- quiet ${params} initrd=initrd.gz
initrd http://${ubuntu_mirror}/${dir}/initrd.gz
echo
echo MD5sums:
md5sum linux initrd.gz
iseq ${img_sigs_enabled} true && iseq ${older_release} true && goto skip_sigs ||
iseq ${img_sigs_enabled} true && goto verify_sigs || goto skip_sigs
:verify_sigs
echo
echo Checking signatures...
imgverify linux ${sigs}${dir}/linux.sig || goto error
imgverify initrd.gz ${sigs}${dir}/initrd.gz.sig || goto error
echo Signatures verified!
echo
:skip_sigs
boot

:ubuntu_exit
clear menu
exit 0
:older_release
set older_release true
set ubuntu_mirror old-releases.ubuntu.com
echo Setting mirror to ${ubuntu_mirror}
clear ubuntu_version
echo -n Please set enter code name of release: ${} && read ubuntu_version
set dir ${ubuntu_base_dir}/dists/${ubuntu_version}/main/installer-${arch_a}/current/images/netboot/
goto ubuntu_boot_type

:mirrorcfg
set mirrorcfg mirror/suite=${ubuntu_version}
set dir ${ubuntu_base_dir}/dists/${ubuntu_version}/main/installer-${arch_a}/current/images/netboot/

:ubuntu_boot_type
menu ${os} [${ubuntu_version}] Installer
item --gap Install types
item install ${space} Install
item rescue ${space} Rescue Mode
item expert ${space} Expert Install
item preseed ${space} Specify preseed url...
choose --default ${type} type || goto ubuntu
echo ${cls}
goto ubuntu_${type}

:ubuntu_rescue
set install_params rescue/enable=true
goto ubuntu_boot

:ubuntu_expert
set install_params priority=low
goto ubuntu_boot

:ubuntu_preseed
echo -n Specify preseed URL for ${os} ${ubuntu_version}: && read preseedurl
set install_params auto=true priority=critical preseed/url=${preseedurl}
goto ubuntu_boot

:ubuntu_install
:ubuntu_boot
set dir ${dir}${menu}-installer/${arch_a}
imgfree
kernel http://${ubuntu_mirror}/${dir}/linux ${install_params} ${netcfg} ${mirrorcfg} ${console} -- quiet ${params} initrd=initrd.gz
initrd http://${ubuntu_mirror}/${dir}/initrd.gz
echo
echo MD5sums:
md5sum linux initrd.gz
iseq ${img_sigs_enabled} true && iseq ${older_release} true && goto skip_sigs ||
iseq ${img_sigs_enabled} true && goto verify_sigs || goto skip_sigs
:verify_sigs
echo
echo Checking signatures...
imgverify linux ${sigs}${dir}/linux.sig || goto error
imgverify initrd.gz ${sigs}${dir}/initrd.gz.sig || goto error
echo Signatures verified!
echo
:skip_sigs
boot

:ubuntu_exit
clear menu
exit 0
:older_release
set older_release true
set ubuntu_mirror old-releases.ubuntu.com
echo Setting mirror to ${ubuntu_mirror}
clear ubuntu_version
echo -n Please set enter code name of release: ${} && read ubuntu_version
set dir ${ubuntu_base_dir}/dists/${ubuntu_version}/main/installer-${arch_a}/current/images/netboot/
goto ubuntu_boot_type

:mirrorcfg
set mirrorcfg mirror/suite=${ubuntu_version}
set dir ${ubuntu_base_dir}/dists/${ubuntu_version}/main/installer-${arch_a}/current/images/netboot/

:ubuntu_boot_type
menu ${os} [${ubuntu_version}] Installer
item --gap Install types
item install ${space} Install
item rescue ${space} Rescue Mode
item expert ${space} Expert Install
item preseed ${space} Specify preseed url...
choose --default ${type} type || goto ubuntu
echo ${cls}
goto ubuntu_${type}

:ubuntu_rescue
set install_params rescue/enable=true
goto ubuntu_boot

:ubuntu_expert
set install_params priority=low
goto ubuntu_boot

:ubuntu_preseed
echo -n Specify preseed URL for ${os} ${ubuntu_version}: && read preseedurl
set install_params auto=true priority=critical preseed/url=${preseedurl}
goto ubuntu_boot

:ubuntu_install
:ubuntu_boot
set dir ${dir}${menu}-installer/${arch_a}
imgfree
kernel http://${ubuntu_mirror}/${dir}/linux ${install_params} ${netcfg} ${mirrorcfg} ${console} -- quiet ${params} initrd=initrd.gz
initrd http://${ubuntu_mirror}/${dir}/initrd.gz
echo
echo MD5sums:
md5sum linux initrd.gz
iseq ${img_sigs_enabled} true && iseq ${older_release} true && goto skip_sigs ||
iseq ${img_sigs_enabled} true && goto verify_sigs || goto skip_sigs
:verify_sigs
echo
echo Checking signatures...
imgverify linux ${sigs}${dir}/linux.sig || goto error
imgverify initrd.gz ${sigs}${dir}/initrd.gz.sig || goto error
echo Signatures verified!
echo
:skip_sigs
boot

:ubuntu_exit
clear menu
exit 0

#!ipxe

# Ubuntu Operating System
# 

goto ${menu}

:ubuntu
set os Ubuntu
clear ubuntu_version
menu ${os} - ${arch_a} - Image Sig Checks: [${img_sigs_enabled}]
item --gap Latest Releases

#!ipxe
<<<<<<< HEAD
>>>>>>> 03dcf6f73f84a91be510289cb2cf94cc05c8db60
=======
>>>>>>> 03dcf6f73f84a91be510289cb2cf94cc05c8db60

# Ubuntu Operating System
# 

goto ${menu}

:ubuntu
set os Ubuntu
clear ubuntu_version
menu ${os} - ${arch_a} - Image Sig Checks: [${img_sigs_enabled}]
<<<<<<< HEAD
<<<<<<< HEAD
item --gap Ubuntu Releases


# 02.distro.ipxe.erb 

item 12.04 ${space} ${os} 12.04 precise
# 02.distro.ipxe.erb 

item 12.04 ${space} ${os} 12.04 precise
# 02.distro.ipxe.erb 

item 14.04 ${space} ${os} 14.04 trusty
# 02.distro.ipxe.erb 

item 14.04 ${space} ${os} 14.04 trusty
# 02.distro.ipxe.erb 

item 16.04 ${space} ${os} 16.04 xenial
# 02.distro.ipxe.erb 

item 16.04 ${space} ${os} 16.04 xenial
# 02.distro.ipxe.erb 

item 17.10 ${space} ${os} 17.10 artful
# 02.distro.ipxe.erb 

item 17.10 ${space} ${os} 17.10 artful
# 02.distro.ipxe.erb 

item 18.04 ${space} ${os} 18.04 bionic
# 02.distro.ipxe.erb 

item 18.04 ${space} ${os} 18.04 bionic
# 03.footer.distro.ipxe.erb

choose menu || goto ubuntu_exit
echo ${cls}
goto ${menu} ||
iseq ${sigs_enabled} true && goto verify_sigs || goto change_menu

:verify_sigs
imgverify ${menu}.ipxe ${sigs}${menu}.ipxe.sig || goto error
goto change_menu

:change_menu
chain ${menu}.ipxe || goto error
goto ubuntu_menu

:ubuntu_exit
clear menu
exit 0
=======
=======
>>>>>>> 03dcf6f73f84a91be510289cb2cf94cc05c8db60
item --gap Latest Releases

#!ipxe

# Ubuntu Operating System
# 

goto ${menu}

:ubuntu
set os Ubuntu
clear ubuntu_version
menu ${os} - ${arch_a} - Image Sig Checks: [${img_sigs_enabled}]
item --gap Latest Releases

#!ipxe

# Ubuntu Operating System
# 

goto ${menu}

:ubuntu
set os Ubuntu
clear ubuntu_version
menu ${os} - ${arch_a} - Image Sig Checks: [${img_sigs_enabled}]
item --gap Latest Releases

#!ipxe

# Ubuntu Operating System
# 

goto ${menu}

:ubuntu
set os Ubuntu
clear ubuntu_version
menu ${os} - ${arch_a} - Image Sig Checks: [${img_sigs_enabled}]
item --gap Latest Releases

#!ipxe

# Ubuntu Operating System
# 

goto ${menu}

:ubuntu
set os Ubuntu
clear ubuntu_version
menu ${os} - ${arch_a} - Image Sig Checks: [${img_sigs_enabled}]
item --gap Latest Releases

#!ipxe

# Ubuntu Operating System
# 

goto ${menu}

:ubuntu
set os Ubuntu
clear ubuntu_version
menu ${os} - ${arch_a} - Image Sig Checks: [${img_sigs_enabled}]
item --gap Latest Releases

#!ipxe

# Ubuntu Operating System
# 

goto ${menu}

:ubuntu
set os Ubuntu
clear ubuntu_version
menu ${os} - ${arch_a} - Image Sig Checks: [${img_sigs_enabled}]
item --gap Latest Releases

#!ipxe

# Ubuntu Operating System
# 

goto ${menu}

:ubuntu
set os Ubuntu
clear ubuntu_version
menu ${os} - ${arch_a} - Image Sig Checks: [${img_sigs_enabled}]
item --gap Latest Releases

#!ipxe

# Ubuntu Operating System
# 

goto ${menu}

:ubuntu
set os Ubuntu
clear ubuntu_version
menu ${os} - ${arch_a} - Image Sig Checks: [${img_sigs_enabled}]
item --gap Latest Releases
<<<<<<< HEAD
>>>>>>> 03dcf6f73f84a91be510289cb2cf94cc05c8db60
=======
>>>>>>> 03dcf6f73f84a91be510289cb2cf94cc05c8db60
