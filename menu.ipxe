#!ipxe

:start
chain --autofree boot.cfg ||
iseq ${cls} serial && goto ignore_cls ||
set cls:hex 1b:5b:4a  # ANSI clear screen sequence - "^[[J"
set cls ${cls:string}
:ignore_cls

:version_check
set latest_version 1.04
echo ${cls}
iseq ${version} ${latest_version} && goto version_up2date ||
echo
echo Updated version of pxe.to is available:
echo
echo Running version.....${version}
echo Updated version.....${latest_version}
echo
echo Please download the latest version from pxe.to.
echo
echo Attempting to chain to latest version...
chain --autofree http://${boot_domain}/ipxe/${ipxe_disk} ||
:version_up2date

isset ${arch} && goto skip_arch_detect ||
cpuid --ext 29 && set arch x86_64 || set arch i386
iseq ${buildarch} arm64 && set arch arm64 ||
:skip_arch_detect
isset ${menu} && goto ${menu} ||

isset ${ip} || dhcp || echo DHCP failed

:main_menu
clear menu
set space:hex 20:20
set space ${space:string}
iseq ${arch} x86_64 && set arch_a amd64 || set arch_a ${arch}
menu ${site_name}
item --gap Default:
item local ${space} Boot from local hdd
item --gap Distributions:
# 02.linux.menu.ipxe.erb

item centos ${space} Centos
# 02.linux.menu.ipxe.erb

item coreos ${space} Coreos
# 02.linux.menu.ipxe.erb

item debian ${space} Debian
# 02.linux.menu.ipxe.erb

item devuan ${space} Devuan
# 02.linux.menu.ipxe.erb

item fedora ${space} Fedora
# 02.linux.menu.ipxe.erb

item kali ${space} Kali
# 02.linux.menu.ipxe.erb

item opensuse ${space} Opensuse
# 02.linux.menu.ipxe.erb

item oraclelinux ${space} Oraclelinux
# 02.linux.menu.ipxe.erb

item rancheros ${space} Rancheros
# 02.linux.menu.ipxe.erb

item scientificlinux ${space} Scientificlinux
# 02.linux.menu.ipxe.erb

item ubuntu ${space} Ubuntu
item --gap Tools:
iseq ${menu_utils} 1 && item utils ${space} Utilities ||
iseq ${arch} x86_64 && set bits 64 || set bits 32
item changebits ${space} Architecture: ${arch} (${bits}bit)
item shell ${space} iPXE shell
item netinfo ${space} Network card info
item --gap Signature Checks:
item sig_check ${space} pxe.to [ enabled: ${sigs_enabled} ]
item img_sigs_check ${space} Images [ enabled: ${img_sigs_enabled} ]
isset ${github_user} && item --gap Custom Menu: ||
isset ${github_user} && item pxe2-custom ${space} ${github_user}'s Custom Menu ||
isset ${menu} && set timeout 0 || set timeout 300000
choose --timeout ${timeout} --default ${menu} menu || goto local
echo ${cls}
goto ${menu} ||
iseq ${sigs_enabled} true && goto verify_sigs || goto change_menu

:verify_sigs
imgverify ${menu}.ipxe ${sigs}${menu}.ipxe.sig || goto error
goto change_menu

:change_menu
chain ${menu}.ipxe || goto error
goto main_menu

:error
echo Error occured, press any key to return to menu ...
prompt
goto main_menu

:local
echo Booting from local disks ...
exit 0

:shell
echo Type "exit" to return to menu.
set menu main_menu
shell
goto main_menu

:changebits
iseq ${arch} x86_64 && set arch i386 || set arch x86_64
goto main_menu

:sig_check
iseq ${sigs_enabled} true && set sigs_enabled false || set sigs_enabled true
goto main_menu

:img_sigs_check
iseq ${img_sigs_enabled} true && set img_sigs_enabled false || set img_sigs_enabled true
goto main_menu

:pxe2-custom
chain https://raw.githubusercontent.com/${github_user}/pxe.to-custom/master/custom.ipxe || goto error
goto main_menu
